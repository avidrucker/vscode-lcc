{
    "rules": [
        {
            "name": "bad register for out mnemonics (string, valid or invalid)",
            "_COMMENT": "note that this pattern also captures errors for udout",
            "pattern": "(?:dout|aout|hout|sout)[\\t ]+((?:\"[^\"\\n\\r\\\\]*(?:\\\\.[^\"\\n\\r\\\\]*)*\"|[^\\t ;]+\"|\"[^\\t ;]+))",
            "validPattern": "^(fp|sp|lr|r[0-7]|^$)$",
            "message": "out mnemonics must be followed by a valid register or nothing, but got {follower} (code 24)",
            "severity": "Error"
        },
        {
            "name": "bad register for out mnemonics (integer)",
            "_COMMENT": "note that this pattern also captures errors for udout",
            "pattern": "(?:dout|aout|hout|sout)[\\t ]+(-?\\d+\\b)",
            "validPattern": "^(fp|sp|lr|r[0-7]|^$)$",
            "message": "out mnemonics must be followed by a valid register or nothing, but got {follower} (code 25)",
            "severity": "Error"
        },
        {
            "name": "bad register for out mnemonics (char, valid or invalid)",
            "_COMMENT": "note that this pattern also captures errors for udout",
            "pattern": "(?:dout|aout|hout|sout)[\\t ]+('['\\\\]{1,2}'|(?:'[^'\\n\\r\\\\]*(?:\\\\.[^'\\n\\r\\\\]*)*'|[^\\t ;]+'|'[^\\t ;]+))",
            "validPattern": "^(fp|sp|lr|r[0-7]|^$)$",
            "message": "out mnemonics must be followed by a valid register or nothing, but got {follower} (code 26)",
            "severity": "Error"
        },
        {
            "name": "bad register for out mnemonics (hexadecimal)",
            "_COMMENT": "note that this pattern also captures errors for udout",
            "pattern": "(?:dout|aout|hout|sout)[\\t ]+(0x[a-fA-F0-9]+\\b)",
            "validPattern": "^(fp|sp|lr|r[0-7]|^$)$",
            "message": "out mnemonics must be followed by a valid register or nothing, but got {follower} (code 27)",
            "severity": "Error"
        },
        {
            "name": "bad register for out mnemonics (non-number-starting catch-all)",
            "_COMMENT": "note that this pattern also captures errors for udout",
            "pattern": "(?:dout|aout|hout|sout)[\\t ]+((?:(?!(0x[;]+|[-?\\d]+)))(?!.*['\"])[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(fp|sp|lr|r[0-7]|^$)$",
            "message": "out mnemonics must be followed by a valid register or nothing, but got {follower} (code 28)",
            "severity": "Error"
        },
        {
            "name": "bad register for out mnemonics (number-starting catch-all)",
            "_COMMENT": "note that this pattern also captures errors for udout",
            "pattern": "(?:dout|aout|hout|sout)[\\t ]+((?!0x)[\\d]+[\\w]+[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(fp|sp|lr|r[0-7]|^$)$",
            "message": "out mnemonics must be followed by a valid register or nothing, but got {follower} (code 29)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for mov (string)",
            "pattern": "mov[\\t ]+\\w+[, \\t]+((?:\"[^\"\\n\\r\\\\]*(?:\\\\.[^\"\\n\\r\\\\]*)*\"|[^\\t ;]+\"|\"[^\\t ;]+))",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+|0x[a-fA-F0-9]+|'\\\\?.')$",
            "message": "The 2nd operand of 'mov' must be a valid register, an integer, a hexadecimal number, or a single quote encapsulated char, but got {follower} (code 8)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for mov (char, valid or invalid)",
            "pattern": "mov[\\t ]+\\w+[,\\t ]+('['\\\\]{1,2}'|(?:'[^'\\n\\r\\\\]*(?:\\\\.[^'\\n\\r\\\\]*)*'|[^\\t ;]+'|'[^\\t ;]+))",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+|0x[a-fA-F0-9]+|'\\\\?.'|'')$",
            "message": "The 2nd operand of 'mov' must be a valid register, an integer, a hexadecimal number, or a single quote encapsulated char, but got {follower} (code 9)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for mov (int)",
            "pattern": "mov[\\t ]+\\w+[,\\t ]+(-?\\d+\\b)",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+|0x[a-fA-F0-9]+|'\\\\?.')$",
            "message": "The 2nd operand of 'mov' must be a valid register, an integer, a hexadecimal number, or a single quote encapsulated char, but got {follower} (code 10)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for mov (hexadecimal)",
            "pattern": "mov[\\t ]+\\w+[,\\t ]+(0x[a-fA-F0-9]+\\b)",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+|0x[a-fA-F0-9]+|'\\\\?.')$",
            "message": "The 2nd operand of 'mov' must be a valid register, an integer, a hexadecimal number, or a single quote encapsulated char, but got {follower} (code 11)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for mov (non-number-starting catch-all)",
            "pattern": "mov[\\t ]+\\w+[,\\t ]+((?:(?!(0x[;]+|[-?\\d]+)))(?!.*['\"])[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+|0x[a-fA-F0-9]+|'\\\\?.')$",
            "message": "The 2nd operand of 'mov' must be a valid register, an integer, a hexadecimal number, or a single quote encapsulated char, but got {follower} (code 12)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for mov (number-starting catch-all)",
            "pattern": "mov[\\t ]+\\w+[,\\t ]+((?!0x)[\\d]+[\\w]+[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+|0x[a-fA-F0-9]+|'\\\\?.')$",
            "message": "The 2nd operand of 'mov' must be a valid register, an integer, a hexadecimal number, or a single quote encapsulated char, but got {follower} (code 13)",
            "severity": "Error"
        },
        {
            "name": "bad 3rd operand for add/sub (string)",
            "pattern": "(?:add|sub)[\\t ]+\\w+[,\\t ]+\\w+[,\\t ]+((?:\"[^\"\\n\\r\\\\]*(?:\\\\.[^\"\\n\\r\\\\]*)*\"|[^\\t ;]+\"|\"[^\\t\\n\\r ;]+))",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+)$",
            "message": "The 3rd operand of 'add'/'sub' must be a valid register or an integer, but got {follower} (code 23)",
            "severity": "Error"
        },
        {
            "name": "out of range 3rd operand for add/sub (integer)",
            "pattern": "(?:add|sub)[\\t ]+\\w+[,\\t ]+\\w+[,\\t ]+(-?\\d+)\\b",
            "validPattern": "(-1[0-6]|-[1-9]|0|1[0-5]|[1-9])",
            "message": "'add'/'sub' expect for their 3rd operand an 'immediate5' number between -16 and 15 (inclusive), but got {follower} (code 17)",
            "severity": "Warning"
        },
        {
            "name": "out of range 3rd operand for add/sub (valid char)",
            "pattern": "(?:add|sub)[\\t ]+\\w+[,\\t ]+\\w+[,\\t ]+('['\\\\]{1,2}'|(?:'[^'\\n\\r\\\\]*(?:\\\\.[^'\\n\\r\\\\]*)*'))",
            "_COMMENT": "There is no valid pattern for this rule, so the next line is intentionally blank",
            "validPattern": "^()$",
            "message": "'add'/'sub' expect for their 3rd operand an 'immediate5' number, but got {follower}, which looks like a char. (code 18)",
            "severity": "Warning"
        },
        {
            "name": "bad 3rd operand for add/sub (non-terminated char)",
            "pattern": "(?:add|sub)[\\t ]+\\w+[,\\t ]+\\w+[,\\t ]+([^\\t ';]+'|'[^\\t\\n\\r' ;]+(?![']))",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+)$",
            "message": "The 3rd operand of 'add'/'sub' must be a valid register or an integer, but got {follower} (code 19)",
            "severity": "Error"
        },
        {
            "name": "bad 3rd operand for add/sub (hexadecimal)",
            "pattern": "(?:add|sub)[\\t ]+\\w+[,\\t ]+\\w+[,\\t ]+(0x[a-fA-F0-9]+\\b)",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+)$",
            "message": "The 3rd operand of 'add'/'sub' must be a valid register or an integer, but got {follower} (code 20)",
            "severity": "Error"
        },
        {
            "name": "bad 3rd operand for add/sub (non-number-starting catch-all)",
            "pattern": "(?:add|sub)[\\t ]+\\w+[,\\t ]+\\w+[,\\t ]+((?:(?!(0x[;]+|[-?\\d]+)))(?!.*['\"])[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+)$",
            "message": "The 3rd operand of 'add'/'sub' must be a valid register or an integer, but got {follower} (code 21)",
            "severity": "Error"
        },
        {
            "name": "bad 3rd operand for add/sub (number-starting catch-all)",
            "pattern": "(?:add|sub)[\\t ]+\\w+[,\\t ]+\\w+[,\\t ]+((?!0x)[\\d]+[\\w]+[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(fp|sp|lr|r[0-7]|-?\\d+)$",
            "message": "The 3rd operand of 'add'/'sub' must be a valid register or an integer, but got {follower} (code 22)",
            "severity": "Error"
        },
        {
            "name": "bad operand for push/pop (string, valid or invalid)",
            "pattern": "(?:push|pop)[\\t ]+((?:\"[^\"\\n\\r\\\\]*(?:\\\\.[^\"\\n\\r\\\\]*)*\"|[^\\t ;]+\"|\"[^\\t\\n\\r ;]+))",
            "validPattern": "^(fp|sp|lr|r[0-7])$",
            "message": "The operand of 'push/pop' must be a valid register, but got {follower} (code 30)",
            "severity": "Error"
        },
        {
            "name": "bad operand for push/pop (char, valid or invalid)",
            "pattern": "(?:push|pop)[\\t ]+('['\\\\]{1,2}'|(?:'[^'\\n\\r\\\\]*(?:\\\\.[^'\\n\\r\\\\]*)*'|[^\\t ;]+'|'[^\\t ;]+))",
            "validPattern": "^(fp|sp|lr|r[0-7])$",
            "message": "The operand of 'push/pop' must be a valid register, but got {follower} (code 31)",
            "severity": "Error"
        },
        {
            "name": "bad operand for push/pop (integer)",
            "pattern": "(?:push|pop)[\\t ]+(-?\\d+)\\b",
            "validPattern": "^(fp|sp|lr|r[0-7])$",
            "message": "The operand of 'push/pop' must be a valid register, but got {follower} (code 32)",
            "severity": "Error"
        },
        {
            "name": "bad operand for push/pop (hexadecimal)",
            "pattern": "(?:push|pop)[\\t ]+(0x[a-fA-F0-9]+\\b)",
            "validPattern": "^(fp|sp|lr|r[0-7])$",
            "message": "The operand of 'push/pop' must be a valid register, but got {follower} (code 33)",
            "severity": "Error"
        },
        {
            "name": "bad operand for push/pop (non-number-starting catch-all)",
            "pattern": "(?:push|pop)[\\t ]+((?:(?!(0x[;]+|[-?\\d]+)))(?!.*['\"])[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(fp|sp|lr|r[0-7])$",
            "message": "The operand of 'push/pop' must be a valid register, but got {follower} (code 34)",
            "severity": "Error"
        },
        {
            "name": "bad operand for push/pop (number-starting catch-all)",
            "pattern": "(?:push|pop)[\\t ]+((?!0x)[\\d]+[\\w]+[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(fp|sp|lr|r[0-7])$",
            "message": "The operand of 'push/pop' must be a valid register, but got {follower} (code 35)",
            "severity": "Error"
        },
        {
            "name": "bad operand for .word directive",
            "pattern": "\\.word[\\t ]+('.*'|\\\".*\\\"|'?\\w+'?)(?:(?:[ ;\\n\\r])|$)",
            "validPattern": "^(-?\\d+|0x[a-fA-F0-9]+|'\\\\.'|''|'.'|[a-zA-Z_$@][a-zA-Z0-9_$@]*[+-]?[-?\\d+]?)$",
            "message": "The operand of '.word' must be an integer, hexadecimal, char, or label (w/ optional offset), but got {follower} (code 36)",
            "severity": "Error"
        },
        {
            "name": "bad label at line start",
            "pattern": "^([^;\\t\\n\\r :]+:?)",
            "validPattern": "[a-zA-Z_@$][a-zA-Z0-9_@$]*:?",
            "message": "Invalid label {follower} found at line start. Labels cannot begin with a number and must contain only letters, numbers, '_', '$', and '@' (code 37)",
            "severity": "Error"
        },
        {
            "name": "bad label not at line start",
            "pattern": "^[\\t ]+([^;\\t\\n\\r :]+:)",
            "validPattern": "[a-zA-Z_@$][a-zA-Z0-9_@$]*:",
            "message": "Invalid label {follower} found not at line start. Non-start labels must end with a colon, cannot begin with a number, and must contain only letters, numbers, '_', '$', and '@' (code 38)",
            "severity": "Error"
        },
        {
            "name": "bad mnemonic1",
            "_COMMENT": "captures mnemonic after a colon terminated label after a leading space",
            "pattern": "^[ ]+(?:[^:\\t\\n\\r ;]+:)[\\t ]*(\\w+)",
            "validPattern": "(cea|brn|mov|add|ld|st|bl|call|jsr|blr|jsrr|and|ldr|str|cmp|not|push|pop|srl|sra|sll|rol|ror|mul|div|rem|or|xor|mvr|sext|sub|jmp|ret|mvi|lea|halt|nl|dout|udout|hout|aout|sout|din|hin|ain|sin|brz|bre|brnz|brne|brne|brne|brp|brlt|brgt|brc|brb|br|bral|m|r|s|bp|.word|.zero|.blkw|.fill|.string|.asciz|.stringz|.space|.start|.global|.globl|.extern|.org)",
            "message": "Invalid mnemonic or directive: {follower} (code 1)",
            "severity": "Error"
        },
        {
            "name": "bad mnemonic2",
            "_COMMENT": "captures mnemonic after a colon terminating label that starts at the beginning of the line",
            "pattern": "^[^\\t ;]+:[\\t ]*([^:\\t\\n\\r ;]+)",
            "validPattern": "(cea|brn|mov|add|ld|st|bl|call|jsr|blr|jsrr|and|ldr|str|cmp|not|push|pop|srl|sra|sll|rol|ror|mul|div|rem|or|xor|mvr|sext|sub|jmp|ret|mvi|lea|halt|nl|dout|udout|hout|aout|sout|din|hin|ain|sin|brz|bre|brnz|brne|brne|brne|brp|brlt|brgt|brc|brb|br|bral|m|r|s|bp|.word|.zero|.blkw|.fill|.string|.asciz|.stringz|.space|.start|.global|.globl|.extern|.org)",
            "message": "Invalid mnemonic or directive: {follower} (code 2)",
            "severity": "Error"
        },
        {
            "name": "bad mnemonic3",
            "_COMMENT": "captures mnemonic/mnemonic/directive that is not preceded by a label or a leading space",
            "pattern": "^[\\t ]+((?![^:\\t ;]+:)[^:\\t ;]+\\b)",
            "validPattern": "(cea|brn|mov|add|ld|st|bl|call|jsr|blr|jsrr|and|ldr|str|cmp|not|push|pop|srl|sra|sll|rol|ror|mul|div|rem|or|xor|mvr|sext|sub|jmp|ret|mvi|lea|halt|nl|dout|udout|hout|aout|sout|din|hin|ain|sin|brz|bre|brnz|brne|brne|brne|brp|brlt|brgt|brc|brb|br|bral|m|r|s|bp|.word|.zero|.blkw|.fill|.string|.asciz|.stringz|.space|.start|.global|.globl|.extern|.org)",
            "message": "Invalid label, mnemonic, or directive: {follower} (code 3)",
            "severity": "Error"
        },
        {
            "name": "bad mnemonic4",
            "_COMMENT": "captures mnemonic preceded by non-colon terminated label",
            "pattern": "^[^\\t ;:]+[\\t ]+([^:\\t\\n\\r ;]+)",
            "validPattern": "(cea|brn|mov|add|ld|st|bl|call|jsr|blr|jsrr|and|ldr|str|cmp|not|push|pop|srl|sra|sll|rol|ror|mul|div|rem|or|xor|mvr|sext|sub|jmp|ret|mvi|lea|halt|nl|dout|udout|hout|aout|sout|din|hin|ain|sin|brz|bre|brnz|brne|brne|brne|brp|brlt|brgt|brc|brb|br|bral|m|r|s|bp|.word|.zero|.blkw|.fill|.string|.asciz|.stringz|.space|.start|.global|.globl|.extern|.org)",
            "message": "Invalid mnemonic or directive: {follower} (code 4)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for cea (string, valid or invalid)",
            "pattern": "cea[ ]+\\w+[,\\t ]+((?:\"[^\"\\n\\r\\\\]*(?:\\\\.[^\"\\n\\r\\\\]*)*\"|[^\\t ;]+\"|\"[^\\t\\n\\r ;]+))",
            "_COMMENT": "cea takes as its 2nd operand a number from -16 up to 15",
            "validPattern": "(-1[0-6]|-[1-9]|0|1[0-5]|[1-9])",
            "message": "The 2nd operand of 'cea' must be a number from -16 to 15, but got {follower} (code 39)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for cea (char, valid or invalid)",
            "pattern": "cea[ ]+\\w+[,\\t ]+('['\\\\]{1,2}'|(?:'[^'\\n\\r\\\\]*(?:\\\\.[^'\\n\\r\\\\]*)*'|[^\\t ;]+'|'[^\\t ;]+))",
            "_COMMENT": "cea takes as its 2nd operand a number from -16 up to 15",
            "validPattern": "(-1[0-6]|-[1-9]|0|1[0-5]|[1-9])",
            "message": "The 2nd operand of 'cea' must be a number from -16 to 15, but got {follower} (code 40)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for cea (integer)",
            "pattern": "cea[ ]+\\w+[,\\t ]+(-?\\d+)\\b",
            "_COMMENT": "cea takes as its 2nd operand a number from -16 up to 15",
            "validPattern": "(-1[0-6]|-[1-9]|0|1[0-5]|[1-9])",
            "message": "The 2nd operand of 'cea' must be a number from -16 to 15, but got {follower} (code 41)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for cea (hexadecimal)",
            "pattern": "cea[ ]+\\w+[,\\t ]+(0x[a-fA-F0-9]+\\b)",
            "_COMMENT": "cea takes as its 2nd operand a number from -16 up to 15",
            "validPattern": "(-1[0-6]|-[1-9]|0|1[0-5]|[1-9])",
            "message": "The 2nd operand of 'cea' must be a number from -16 to 15, but got {follower} (code 42)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for cea (non-number-starting catch-all)",
            "pattern": "cea[ ]+\\w+[,\\t ]+((?:(?!(0x[;]+|[-?\\d]+)))(?!.*['\"])[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "_COMMENT": "cea takes as its 2nd operand a number from -16 up to 15",
            "validPattern": "(-1[0-6]|-[1-9]|0|1[0-5]|[1-9])",
            "message": "The 2nd operand of 'cea' must be a number from -16 to 15, but got {follower} (code 43)",
            "severity": "Error"
        },
        {
            "name": "bad 2nd operand for cea (number-starting catch-all)",
            "pattern": "cea[ ]+\\w+[,\\t ]+((?!0x)[\\d]+[\\w]+[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "_COMMENT": "cea takes as its 2nd operand a number from -16 up to 15",
            "validPattern": "(-1[0-6]|-[1-9]|0|1[0-5]|[1-9])",
            "message": "The 2nd operand of 'cea' must be a number from -16 to 15, but got {follower} (code 44)",
            "severity": "Error"
        },
        {
            "name": "bad operand for .string directive (string)",
            "pattern": "\\.string[\\t ]+((?:\"[^\"\\n\\r\\\\]*(?:\\\\.[^\"\\n\\r\\\\]*)*\"|[^\\t ;]+\"|\"[^\\t\\n\\r ;]+))",
            "validPattern": "^(\\\"(?:[^\"\\\\\\n\\r]|\\\\.)*\\\")$",
            "message": "The operand of '.string' must be a valid string (double-quote encapsulated), but got {follower}. Maybe you are missing an escape slash '\\' or a starting or closing double quote? (code 5)",
            "severity": "Error"
        },
        {
            "name": "bad operand for string directive (char)",
            "pattern": "\\.string[\\t ]+((?:'[^'\\n\\r\\\\]*(?:\\\\.[^'\\n\\r\\\\]*)*'|[^\\t ;]+'|'[^\\t\\n\\r ;]+))",
            "validPattern": "^(\".*\")$",
            "message": "The operand of '.string' must be a string, but got {follower}. Perhaps you are using single quotes instead of double quotes? (code 6)",
            "severity": "Error"
        },
        {
            "name": "bad operand for string directive (int)",
            "pattern": "\\.string[\\t ]+(-?\\d+\\b)",
            "validPattern": "^(\".*\")$",
            "message": "The operand of '.string' must be a string, but got integer {follower}. (code 7)",
            "severity": "Error"
        },
        {
            "name": "bad operand for .string directive (hexadecimal)",
            "pattern": "\\.string[\\t ]+(0x[a-fA-F0-9]+\\b)",
            "validPattern": "^(\".*\")$",
            "message": "The operand of '.string' must be a string, but got hexadecimal {follower}. (code 14)",
            "severity": "Error"
        },
        {
            "name": "bad operand for .string directive (non-number-starting catch-all)",
            "pattern": "\\.string[\\t ]+((?:(?!(0x[;]+|[-?\\d]+)))(?!.*['\"])[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(\".*\")$",
            "message": "The operand of '.string' must be a string, but got {follower} (code 15)",
            "severity": "Error"
        },
        {
            "name": "bad operand for .string direcive (number-starting catch-all)",
            "pattern": "\\.string[\\t ]+((?!0x)[\\d]+[\\w]+[^'\" \\t]*[^\\n\\r\"'; \\t])",
            "validPattern": "^(\".*\")$",
            "message": "The operand of '.string' must be a string, but got {follower} (code 16)",
            "severity": "Error"
        }

    ]
}